Bitcoin price predictior
year,month,day,hour,min,sec >>> [ type ] : user +++ ms +++ end.
2022-2-6  15:23:9 >>> [ start ] : cbofsbit | importing libraries | end.
2022-2-6  15:23:9 >>> [ successful ] : cbofsbit | importing libraries | end.
2022-2-6  15:23:9 >>> [ reading ] : cbofsbit | reading .updateTime | end.
2022-2-6  15:23:9 >>> [ return ] : cbofsbit | start date = 2022-02-06 00:00:00 end date = 2022-02-06 00:00:00 | end.
2022-2-6  15:23:9 >>> [ successful ] : cbofsbit | reading .updateTime | end.
2022-2-6  15:23:9 >>> [ calcutaing ] : cbofsbit | calcutaing day between start date and end date | end.
2022-2-6  15:23:9 >>> [ return ] : cbofsbit | day between start date and end date = 0 | end.
2022-2-6  15:23:9 >>> [ successful ] : cbofsbit | calcutaing day between start date and end date | end.
2022-2-6  15:23:9 >>> [ reading ] : cbofsbit | reading day by day dataset | end.
2022-2-6  15:23:9 >>> [ successful ] : cbofsbit | reading day by day dataset | end.
2022-2-6  15:23:9 >>> [ spliting ] : cbofsbit | spliting dataset to smaler part | end.
2022-2-6  15:23:9 >>> [ return ] : cbofsbit | smaler size after split = 100 | end.
2022-2-6  15:23:9 >>> [ successful ] : cbofsbit | spliting dataset to smaler part | end.
2022-2-6  15:23:9 >>> [ spliting ] : cbofsbit | spliting dataset to train part and test part | end.
2022-2-6  15:23:9 >>> [ return ] : cbofsbit | test size after split = 365 | end.
2022-2-6  15:23:9 >>> [ successful ] : cbofsbit | spliting dataset to train part and test part | end.
2022-2-6  15:23:9 >>> [ scaling ] : cbofsbit | scaling data in 0,1 | end.
2022-2-6  15:23:9 >>> [ successful ] : cbofsbit | scaling data in 0,1 | end.
2022-2-6  15:23:9 >>> [ making ] : cbofsbit | making xTrain and yTain | end.
2022-2-6  15:23:9 >>> [ successful ] : cbofsbit | making xTrain and yTrain | end.
2022-2-6  15:23:9 >>> [ train ] : cbofsbit | training start | end.
2022-2-6  18:49:59 >>> [ successful ] : cbofsbit | training finishd | end.
2022-2-6  18:49:59 >>> [ saving ] : cbofsbit | saving model | end.
2022-2-6  18:49:59 >>> [ successful ] : cbofsbit | saving model | end.
2022-2-6  18:49:59 >>> [ plot ] : cbofsbit | ploting loss history of trainig model | end.
2022-2-6  18:49:59 >>> [ successful ] : cbofsbit | ploting loss history of trainig model | end.
2022-2-6  18:49:59 >>> [ loading ] : cbofsbit | loading saved model | end.
2022-2-6  18:50:1 >>> [ successful ] : cbofsbit | loading saved model | end.
2022-2-6  18:50:1 >>> [ test ] : cbofsbit | predicting price | end.
2022-2-6  18:50:7 >>> [ successful ] : cbofsbit | predicting price | end.
2022-2-6  18:50:7 >>> [ plot ] : cbofsbit | ploting prediction price and actual price | end.
2022-2-6  18:50:7 >>> [ successful ] : cbofsbit | ploting prediction price and actual price | end.
2022-2-6  18:50:7 >>> [ saving ] : cbofsbit | saving prediction price and actual price plot | end.
2022-2-6  18:50:7 >>> [ successful ] : cbofsbit | saving prediction price and actual price plot | end.
2022-2-6  18:50:7 >>> [ making ] : cbofsbit | making predict csv and making accuracy list | end.
2022-2-6  18:50:8 >>> [ successful ] : cbofsbit | making predict csv and making accuracy list | end.
2022-2-6  18:50:8 >>> [ calcutaing ] : cbofsbit | calcutaing accuracy | end.
2022-2-6  18:50:8 >>> [ return ] : cbofsbit | avrage accuracy = 87.20319142801534 max accuracy = 99.85602492481986 min accuracy = 29.99344762555316 increases and decreases and decreases accuracy = 0.9038461538461539 count of correct increases and decreases = 329 count of flase increases and decreases = 35 | end.
2022-2-6  18:50:8 >>> [ successful ] : cbofsbit | calcutaing accuracy | end.
